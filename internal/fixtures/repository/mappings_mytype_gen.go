// Code generated by construct, DO NOT EDIT.
package repository

import (
	uuid "github.com/gofrs/uuid"
	fixtures "github.com/networkteam/construct/internal/fixtures"
	json "github.com/networkteam/construct/json"
	"time"
)

var myTargetTypeSortFields = map[string]string{
	"foo":      "my_type.foo",
	"lasttime": "my_type.last_time",
}

type MyTargetTypeChangeSet struct {
	ID       *uuid.UUID
	Foo      *string
	Bar      []byte
	LastTime **time.Time
}

func (c MyTargetTypeChangeSet) toMap() map[string]interface{} {
	m := make(map[string]interface{})
	if c.ID != nil {
		m["id"] = *c.ID
	}
	if c.Foo != nil {
		m["foo"] = *c.Foo
	}
	if c.Bar != nil {
		m["the_bar"] = c.Bar
	}
	if c.LastTime != nil {
		m["last_time"] = *c.LastTime
	}
	return m
}

func MyTargetTypeToChangeSet(r fixtures.MyType) (c MyTargetTypeChangeSet) {
	if r.ID != uuid.Nil {
		c.ID = &r.ID
	}
	c.Foo = &r.Foo
	c.Bar = r.Bar
	c.LastTime = &r.LastTime
	return
}

var myTargetTypeDefaultSelectJson = json.JsonBuildObject().
	Set("ID", json.Exp("my_type.id")).
	Set("Foo", json.Exp("my_type.foo")).
	Set("Bar", json.Exp("my_type.the_bar")).
	Set("LastTime", json.Exp("my_type.last_time"))
